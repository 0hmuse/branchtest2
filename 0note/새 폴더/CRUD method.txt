** 서브쿼리에 대하여 아는데로 설명하시오.
쿼리문장안에 또다른 쿼리문장이 들어간다.
select절 from절 where절에 들어갈 수 있다.

from절에 들어가는 서브쿼리는 가상의 테이블(정확한)을 만들어서 들어갈 수 있다.

===> 쿼리문안에 포함되는 또다른 쿼리문을 말한다.
	쿼리문속에 select절, from절, where절에 올 수 있습니다.


** 다중행 연산자에 대하여 아는데로 설명하시오.
where절에 들어가는 서브쿼리의 레코드 수가 여러건일때 
where in, any(some), all, exist 가 들어가는데
in =
any(some),all <,>,<=,>= 을 쓸수 있다.

===> 서브쿼리의 건수가 여러건일때 사용하는 연산자들을 말합니다.
	in, any, some, all, exitst등이 있습니다.
 	=, 


데이터베이스 명령어
1. DDL
2. DCL
3. DML*
	데이터 추가	insert ~
	데이터 수정	update ~	
	데이터 삭제	delete ~
	데이터 검색	select ~



** 메소드 짓기

CRUD 메소드 정의에 대한 쪽지시험
C:	Create	insert		insert into 테이블명 values(속성1, 속성2, 속성3, ... );
R:	Read	select		select * from 테이블명; 	// 테이블의 모든속성 출력하기
U:	Update	update		update 테이블명 set 컬럼1=값1, 컬럼2=값2 where 조건식;
D:	Delete	delete		delete 테이블명 where 조건식;

----------------------------------------------------------------------------------------------------
** 고객추가하기(insert update)
String sql = "insert into customer values(?,?,?,?)";

public int insertCustomer(CustomerVo c){
	int re = -1;
	String sql = "insert into customer values(?,?,?,?)";
	try{
		Connection conn = ConnectionProvaider.getConnection();
		PredardStatement pstmt = conn.prepareStatement(sql);
		pstmt.setInt(1, c.getCustid());
		pstmt.setString(2, c.getName());
		pstmt.setString(3, c.getAddress());
		pstmt.setString(4, c.getPhone());
		re = pstmt.executeUpdate();
		ConnectionProvider.close(null,pstmt,conn);
	}catch(Exception e){
	}

	return re;

}
----------------------------------------------------------------------------------------------------

public int deleteCustomer(CustomerVo c){
}

public int updateCustomer(CustomerVo c){
}

public ArrayList<CustomerVo> listAll(){
}

----------------------------------------------------------------------------------------------------
도서번호가 4번인 도서의 정보
select*from book where bookid = 4;

** 도서번호를 매개변수로 받아서 책의 정보를 출력하기-> 1건(select query)
public BookVo getBook(int no){
	String sql = "select*from book where bookid = ?";
	BookVo b = null;

	try{
		Connection conn = ConnectionProvider.getConnection();
		PrepaerdStatement pstmt = conn.prepareStatement(spl);
		pstmt.setInt(1, no);
		ResultSet rs = pstmt.executeQurey();
		if(rs.next()){
			b = new BookVo((rs.getInt(1),rs.getString(2),rs.getString(3),rs.getInt(4)));
		}
		ConnectionProvider.close(re, pstmt, conn);
	}catch(Exception e){
	}

	return b;
}
----------------------------------------------------------------------------------------------------
** 출판사이름을 매개변수로 전달받아
	해당 출판사의 모든 도서의 정보를 vo에 담아
	리스트를 반환하는 메소드를 정의하세요

'이상미디어'출판사의 모든도서를 검색하세요
select*from book where publisher = '이상미디어'; --> 가 여러개의책일테니 ArratList에 담자

public ArrayList<BookVo> listBook(String piblisher){

	ArrayList<BookVo> list = new ArrayList<BookVo>();
	String sql = "select*from book where publisher =?";
	try{
		Connection conn = ConnectionProvider.getConnection();
		PreparedStatement pstmt = conn.prepareStatement(sql);
		pstmt.setString(1, publisher);
		ResultSet rs = pstmt.executeQuery();
		while(rs.next()){
			list.add(new BookVo(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getInt(4)));
		}
		ConnectionProvider.close(pstmt,rs,conn);

	}catch(){
	}

	return list;

}






















