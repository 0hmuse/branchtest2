<< 제네릭 >>
자바 초기에는 컬렉션 프레임웤에 온갖 자료형을 담을 수 있는 것이 장점이었으나
이것이 현재에는 단점이 되어 컬렉션 프레임웤에 담을 수 있는 데이터타입을 제한하고 
사용하기를 권장 합니다. 이것은 제네릭 이라고 합니다.

ArrayList list = new ArrayList();
list.add("귤");
list.add(23);
list.add(new Person("홍길동", 20));
list.add(new Person("이순신", 40));
list.add(true)

==> 위의 list의 첫번째 요소는 String, 두번째 요소는 정수형
3번째 4번째 요소는 Person형등
다양한 자료형이 담겨 있어요.

list 자료를 담기만 하고 끝나는 것이 아니고
list에 담긴 자료를 하나씩 꺼내와서 어떤 일처리를 해야 할 텐데요
이것들의 자료형이 마구 섞여 있어 불편을 초래해요.
만약 담긴 자료형이 Person이라면 sayHello 메소드를 호출하고자 한다면
또 담긴 자료형이 정수형이라면 모두 누적을 한다면
일일이 그 꺼내온 자료형이 어떤 자료형인 검사해야 해요.
그래서 현재의 자바에서는 
컬랙션 프레임웤에 담는 자료형은 
특정 자료형으로 제한하기를 권장합니다.

ArrayList<Person> list = new ArrayList<Person>();

위와같이 표현하면
list에 담는 자료형을 Person으로 제한하겠다
라는 의미 입니다.

ArrayList<int> list = new ArrayList<int>();
ArrayList<Integer> list = new ArrayList<Integer>();


<< Wrapper 클래스 >>
기본자료형을 참조자료형(객체)로 만들어 주는 클래스들을 말합니다.
서로다른 자료형끼리의 형변환을 위해서도 Wrapper 클래스를 사용합니다.


자바가 제공하는 어떠한 사용할때
	기본자료형을 취급하기 않고
	객체만 상대하는 메소들이 있어요
	이런 메소드를 사용하려면
	Wrapper클래스를 이용하여 
	기본자료형의 데이터를 객체로 만들어야 해요!
	
boolean		Boolean
char		Chracter
byte		Byte
short		Short
int			Integer
long		Long
float		Float
double		Double	
	

=============================================================

<< 클래스 사이의 관계 >>

- is a 관계
	상속관계에 있는 것을 말합니다.
	이미 있는 클래스를 확장하여 
	자식클래스를 만드는 것을 말합니다.


- has a 관계
	이미 있는 다른 클래스를 
	맴버변수로 갖는 것을 말합니다.




=============================================================
다형성 이야기 좀 더 해주세요!

TreeMap
LinkedHashMap








=========================================================
<< 숙제 >>
도서의 정보를 표현하기 위한 클래스를 작성하세요.
도서의 정보는 도서번호, 도서명, 저자, 가격, 출판사로 구성됩니다.
많은 양의 도서를 관리하기 위한 ArrayList를 이용하여 
5권이상의 도서를 ArrayList에 담고 도서의 가격순으로 정렬하여 
출력하는 프로그램을 작성해 봅니다.

메뉴를 이용하여 새로운 도서의 등록, 수정, 삭제, 모두출력을 
구현해 봅니다.

가능하면 참고자료 없이 코딩이 가능한 상태로 만드세요!
















